version: '3'
services:


#Nginx Service
  nginx-serv:
    image: nginx:alpine
    container_name: nginx-serv
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
      - "44443:443"
    volumes:
      - ./src:/var/www
      - ./docker/nginx/certs:/etc/nginx/certs
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

    #PHP Service
  web-app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: web-app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./src:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
   
  #MySQL Service
  web-db:
    image: mysql:5.7.22
    container_name: web-db
    restart: unless-stopped
    tty: true
    ports:
      - "33306:3306"
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: docker
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network    
  #Node Service
  web-node:
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    container_name: web-node
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: node
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    networks:
      - app-network
  

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local